version: "3"

env:
  GO111MODULE: on
  CGO_ENABLED: 0

vars:
  GIT_COMMIT:
    sh: git rev-parse --short HEAD
  GIT_TAG:
    sh: git describe --tags --abbrev=0 --exact-match 2>/dev/null || echo "v0.0.0"
  BUILD_DATA:
    sh: date -u '+%Y-%m-%dT%H:%M:%SZ'

tasks:
  setup:
    desc: Setup the project
    cmds:
      - go mod tidy
  build:
    desc: Build the project
    cmds:
      - go build -o ./bin/apigear -ldflags="-X main.version={{.GIT_TAG}} -X main.commit={{.GIT_COMMIT}} -X main.date={{.BUILD_DATA}}" ./cmd/apigear
    sources:
      - "**/*.go"
  install:
    desc: Install the project
    cmds:
      - go install -ldflags="-X main.version={{.GIT_TAG}} -X main.commit={{.GIT_COMMIT}} -X main.date={{.BUILD_DATA}}" ./cmd/apigear
  lint:
    desc: Lint the project
    cmds:
      - golangci-lint run ./...
  test:
    desc: Run tests
    cmds:
      - go test ./...
  test::ci:
    desc: Run tests on CI
    cmds:
      - go test -failfast -race ./...
  cover:
    desc: Show coverage
    cmds:
      - go tool cover -html=coverage.txt
  ci:
    desc: Run all CI checks
    cmds:
      - task: setup
      - task: lint
      - task: test::ci
  run:
    desc: Run command line
    cmds:
      - go run ./cmd/apigear {{.CLI_ARGS}}
    sources:
      - "**/*.go"
  debug:
    desc: Debug command line
    cmds:
      - dlv debug ./cmd/apigear -- {{.CLI_ARGS}}
  default:
    desc: Run all CI checks
    cmds:
      - task: ci
  clean:
    desc: Clean the project
    cmds:
      - rm -rf ./bin
      - rm -rf ./coverage.txt
  vuln:
    desc: Check for vulnerabilities
    cmds:
      - govulncheck ./...
  antlr:
    desc: Generate antlr parser
    cmds:
      - antlr -Dlanguage=Go pkg/idl/parser/ObjectApi.g4
  docs:
    desc: Generate docs
    cmds:
      - rm -rf ./docs
      - mkdir -p ./docs
      - go run ./cmd/apigear x doc
  schema:
    desc: convert yaml schemas to json
    cmds:
      - go run ./cmd/apigear x y2j 'pkg/spec/schema/*.yaml'
  simu-run:
    desc: Run simulation with a demo scenario
    cmds:
      - go run ./cmd/apigear s r ./data/simu/demo.scenario.yaml
  simu-feed:
    desc: Feed simulation with a demo json feed
    cmds:
      - go run ./cmd/apigear s f ./data/simu/sample.olnk.ndjson
