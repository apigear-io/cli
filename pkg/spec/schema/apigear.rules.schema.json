{
  "$id": "https://apigear.co/schemas/rules.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "Document": {
      "additionalProperties": false,
      "description": "Document defines a file which will be transformed using the template engine from source to target. If target is not specified, it will be the same as the source.",
      "properties": {
        "force": {
          "default": false,
          "description": "Force defines whether the document should be forcefully overwritten if it already exists.",
          "type": "boolean"
        },
        "preserve": {
          "default": false,
          "description": "Preserve defines whether the document should be preserved if it already exists (can be overwritten by force).",
          "type": "boolean"
        },
        "raw": {
          "default": false,
          "description": "When true, the template engine will not be applied to the document, it will be copied as is.",
          "type": "boolean"
        },
        "source": {
          "description": "Source defines the source file name, relative to the templates folder. If only the source is given, the target will be the same as the source.",
          "type": "string"
        },
        "target": {
          "description": "Target defines the document target path relative to the output folder",
          "type": "string"
        }
      },
      "required": [
        "source"
      ],
      "type": "object"
    },
    "Feature": {
      "additionalProperties": false,
      "description": "Feature defines a certain aspect in a template which can be enabled.",
      "properties": {
        "name": {
          "description": "Name of the feature. This is used to enable/disable the feature on the command line. All features are enabled by default. Features must be lowercase and start with a letter, they can contain letters, numbers, hyphens and underscores.",
          "pattern": "^[a-z][a-z0-9-_]*$",
          "type": "string"
        },
        "path": {
          "description": "Path defines the a template enabled path where the documents will be written to. For example '{{dot .Module.Name}}/api'",
          "type": "string"
        },
        "requires": {
          "description": "Requires defines a list of features which must be run before this feature can be used.",
          "items": {
            "description": "Name of the feature which must be run before this feature can be used.",
            "pattern": "^[a-z][a-z0-9-_]*$",
            "type": "string"
          },
          "type": "array"
        },
        "scopes": {
          "description": "Scopes defines a list of scoped api nodes the feature applies to (e.g. system, module, interface, struct, enum).",
          "items": {
            "$ref": "#/definitions/Scope"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Scope": {
      "additionalProperties": false,
      "description": "Scope defines a set of documents which will be transformed, when the scope is applied.",
      "properties": {
        "documents": {
          "description": "List of documents which will be transformed using the template engine.",
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array"
        },
        "match": {
          "description": "Match defines the context where this scope is applied to, e.g. system, module, interface, struct, enum.",
          "enum": [
            "system",
            "module",
            "interface",
            "struct",
            "enum"
          ],
          "type": "string"
        },
        "prefix": {
          "description": "Prefix defines the prefix for all documents written",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "description": "Rules engine to drive the object api generator\nA typical setup looks like this:\n```\nschema: apigear.rules/1.0\nname: simple cpp template\nengines:\n  cli: \"\u003e= v0.1.0 \u003c v1.0.0\"\nfeatures:\n  - name: api\n    path: {{dot .Module.Name}}/\n    scopes:\n      - match: module\n        documents:\n          - source: api.h\n            target: api.h\n\n  - name: core\n    requires: [api]\n    path: {{dot .Module.Name}}/\n    scopes:\n      - match: module\n        documents:\n          - source: core.h\n          - target: core.h\n          - source: core.cpp\n            target: core.cpp\n  - name: init\n    requires: [core]\n    path: {{dot .Module.Name}}/\n    scopes:\n      - name: module\n        documents:\n          - source: Makefile\n          - source: service.h\n            target: {{snake .Interface.Name}}.h\n          - source: service.cpp\n            target: {{snake .Interface.Name}}.cpp\n```\n",
  "properties": {
    "engines": {
      "additionalProperties": false,
      "description": "Engines defines a list cli versions which are supported by this rules engine.",
      "properties": {
        "cli": {
          "description": "SemVer version constraint for the cli engine (e.g. \"\u003e= v0.1.0 \u003c v1.0.0\")",
          "type": "string"
        }
      },
      "type": "object"
    },
    "features": {
      "description": "Features define different aspects of the generated code, for example core, stubs, api.",
      "items": {
        "$ref": "#/definitions/Feature"
      },
      "type": "array"
    },
    "languages": {
      "description": "Languages defines a list of generated coding languages (e.g. cpp, java, py, ue, rs, go, ...) which are supported by this rules engine.",
      "items": {
        "description": "Coding language name. It should be a short, descriptive name of the coding language.",
        "type": "string"
      },
      "type": "array"
    },
    "name": {
      "description": "The name of the rules document. It should be a short, descriptive name of the rules document.",
      "type": "string"
    },
    "schema": {
      "default": "apigear.rules/1.0",
      "description": "The ApiGear rules specification version of this document.",
      "enum": [
        "apigear.rules/1.0"
      ],
      "type": "string"
    },
    "version": {
      "default": "0.1.0",
      "description": "The version of the rules document. Should be a major and minor and an optional patch version, separated by a dot (e.g. 0.1 or 0.1.0).",
      "pattern": "^[0-9]+[.][0-9]+([.][0-9]+)*$",
      "type": "string"
    }
  },
  "title": "ObjectAPI rules engine",
  "type": "object"
}