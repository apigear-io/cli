{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "Target": {
      "additionalProperties": false,
      "description": "The target defines a target which is used to generate source code.",
      "properties": {
        "description": {
          "description": "Description of the target.",
          "type": "string"
        },
        "dryRun": {
          "description": "If true the target will not be generated, only the actions will be printed.",
          "type": "boolean"
        },
        "features": {
          "default": [],
          "description": "A template features, which can be enabled. See the template documentation for available features.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "force": {
          "description": "If true the target will be generated even if it already exists.",
          "type": "boolean"
        },
        "imports": {
          "default": [],
          "description": "List of imports which are used to enhance the meta information.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inputs": {
          "default": [],
          "description": "List of input files which are used to generate the target (either API YAML definitions or IDL definition files).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "meta": {
          "description": "Meta data about the target which will be passed on to the template.",
          "type": "object"
        },
        "name": {
          "description": "Name of the target, for development purposes.",
          "type": "string"
        },
        "output": {
          "description": "The output directory of the target.",
          "type": "string"
        },
        "template": {
          "description": "Path to the template which can be either template package name (e.g. apigear-io/template-cpp) or a template folder with a rules document (../\u003ctemplate_folder\u003e).",
          "type": "string"
        }
      },
      "required": [
        "inputs",
        "output",
        "template"
      ],
      "type": "object"
    }
  },
  "properties": {
    "description": {
      "description": "The description of the solution. It should be a short, descriptive text about the solution.",
      "type": "string"
    },
    "layers": {
      "deprecated": true,
      "description": "The layers section contains a list of targets which are used to generate the solution.",
      "items": {
        "$ref": "#/definitions/Target"
      },
      "type": "array"
    },
    "meta": {
      "description": "The meta section contains meta data about the solution, as key-value pairs.",
      "type": "object"
    },
    "name": {
      "description": "The name of the solution.",
      "type": "string"
    },
    "rootDir": {
      "description": "The root directory of the solution to map all other paths to. Defaults to the current working directory.",
      "type": "string"
    },
    "schema": {
      "default": "apigear.solution/1.0",
      "description": "The ApiGear solution specification version of this document.",
      "enum": [
        "apigear.solution/1.0"
      ],
      "type": "string"
    },
    "targets": {
      "description": "The targets section contains a list of code generation targets. A target could be c++ and another target could be python",
      "items": {
        "$ref": "#/definitions/Target"
      },
      "type": "array"
    },
    "version": {
      "default": "0.1.0",
      "description": "The version of the solution. Should be a major and minor and an optional patch version, separated by a dot (e.g. 0.1 or 0.1.0).",
      "pattern": "^[0-9]+[.][0-9]+([.][0-9]+)*$",
      "type": "string"
    }
  },
  "required": [
    "schema"
  ],
  "title": "ApiGear Solution 1.0 Schema",
  "type": "object"
}