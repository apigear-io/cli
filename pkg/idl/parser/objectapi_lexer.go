// Code generated from pkg/idl/parser/ObjectApi.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ObjectApiLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ObjectApiLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func objectapilexerLexerInit() {
	staticData := &ObjectApiLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'module'", "'import'", "'interface'", "'extends'", "'{'", "'}'",
		"'readonly'", "':'", "'('", "')'", "','", "'signal'", "'struct'", "'enum'",
		"'='", "'['", "']'", "'bool'", "'int'", "'int32'", "'int64'", "'float'",
		"'float32'", "'float64'", "'string'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "WHITESPACE", "INTEGER", "HEX",
		"TYPE_IDENTIFIER", "IDENTIFIER", "VERSION", "DOCLINE", "TAGLINE", "COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"WHITESPACE", "INTEGER", "HEX", "TYPE_IDENTIFIER", "IDENTIFIER", "VERSION",
		"DOCLINE", "TAGLINE", "COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 34, 267, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
		2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14,
		1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 1, 24, 1, 25, 4, 25, 199, 8, 25, 11, 25, 12, 25, 200, 1, 25, 1, 25,
		1, 26, 3, 26, 206, 8, 26, 1, 26, 4, 26, 209, 8, 26, 11, 26, 12, 26, 210,
		1, 27, 1, 27, 1, 27, 1, 27, 4, 27, 217, 8, 27, 11, 27, 12, 27, 218, 1,
		28, 1, 28, 5, 28, 223, 8, 28, 10, 28, 12, 28, 226, 9, 28, 1, 28, 1, 28,
		3, 28, 230, 8, 28, 1, 29, 1, 29, 5, 29, 234, 8, 29, 10, 29, 12, 29, 237,
		9, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 5, 31, 247,
		8, 31, 10, 31, 12, 31, 250, 9, 31, 1, 32, 1, 32, 5, 32, 254, 8, 32, 10,
		32, 12, 32, 257, 9, 32, 1, 33, 1, 33, 5, 33, 261, 8, 33, 10, 33, 12, 33,
		264, 9, 33, 1, 33, 1, 33, 0, 0, 34, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 1, 0, 9, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 43, 43, 45, 45, 3, 0, 48,
		57, 65, 70, 97, 102, 2, 0, 65, 90, 95, 95, 3, 0, 48, 57, 65, 90, 95, 95,
		3, 0, 65, 90, 95, 95, 97, 122, 5, 0, 46, 46, 48, 57, 65, 90, 95, 95, 97,
		122, 1, 0, 48, 57, 2, 0, 10, 10, 13, 13, 276, 0, 1, 1, 0, 0, 0, 0, 3, 1,
		0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1,
		0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19,
		1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0,
		27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0,
		0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0,
		0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0,
		0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1,
		0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65,
		1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 1, 69, 1, 0, 0, 0, 3, 76, 1, 0, 0, 0, 5,
		83, 1, 0, 0, 0, 7, 93, 1, 0, 0, 0, 9, 101, 1, 0, 0, 0, 11, 103, 1, 0, 0,
		0, 13, 105, 1, 0, 0, 0, 15, 114, 1, 0, 0, 0, 17, 116, 1, 0, 0, 0, 19, 118,
		1, 0, 0, 0, 21, 120, 1, 0, 0, 0, 23, 122, 1, 0, 0, 0, 25, 129, 1, 0, 0,
		0, 27, 136, 1, 0, 0, 0, 29, 141, 1, 0, 0, 0, 31, 143, 1, 0, 0, 0, 33, 145,
		1, 0, 0, 0, 35, 147, 1, 0, 0, 0, 37, 152, 1, 0, 0, 0, 39, 156, 1, 0, 0,
		0, 41, 162, 1, 0, 0, 0, 43, 168, 1, 0, 0, 0, 45, 174, 1, 0, 0, 0, 47, 182,
		1, 0, 0, 0, 49, 190, 1, 0, 0, 0, 51, 198, 1, 0, 0, 0, 53, 205, 1, 0, 0,
		0, 55, 212, 1, 0, 0, 0, 57, 220, 1, 0, 0, 0, 59, 231, 1, 0, 0, 0, 61, 238,
		1, 0, 0, 0, 63, 242, 1, 0, 0, 0, 65, 251, 1, 0, 0, 0, 67, 258, 1, 0, 0,
		0, 69, 70, 5, 109, 0, 0, 70, 71, 5, 111, 0, 0, 71, 72, 5, 100, 0, 0, 72,
		73, 5, 117, 0, 0, 73, 74, 5, 108, 0, 0, 74, 75, 5, 101, 0, 0, 75, 2, 1,
		0, 0, 0, 76, 77, 5, 105, 0, 0, 77, 78, 5, 109, 0, 0, 78, 79, 5, 112, 0,
		0, 79, 80, 5, 111, 0, 0, 80, 81, 5, 114, 0, 0, 81, 82, 5, 116, 0, 0, 82,
		4, 1, 0, 0, 0, 83, 84, 5, 105, 0, 0, 84, 85, 5, 110, 0, 0, 85, 86, 5, 116,
		0, 0, 86, 87, 5, 101, 0, 0, 87, 88, 5, 114, 0, 0, 88, 89, 5, 102, 0, 0,
		89, 90, 5, 97, 0, 0, 90, 91, 5, 99, 0, 0, 91, 92, 5, 101, 0, 0, 92, 6,
		1, 0, 0, 0, 93, 94, 5, 101, 0, 0, 94, 95, 5, 120, 0, 0, 95, 96, 5, 116,
		0, 0, 96, 97, 5, 101, 0, 0, 97, 98, 5, 110, 0, 0, 98, 99, 5, 100, 0, 0,
		99, 100, 5, 115, 0, 0, 100, 8, 1, 0, 0, 0, 101, 102, 5, 123, 0, 0, 102,
		10, 1, 0, 0, 0, 103, 104, 5, 125, 0, 0, 104, 12, 1, 0, 0, 0, 105, 106,
		5, 114, 0, 0, 106, 107, 5, 101, 0, 0, 107, 108, 5, 97, 0, 0, 108, 109,
		5, 100, 0, 0, 109, 110, 5, 111, 0, 0, 110, 111, 5, 110, 0, 0, 111, 112,
		5, 108, 0, 0, 112, 113, 5, 121, 0, 0, 113, 14, 1, 0, 0, 0, 114, 115, 5,
		58, 0, 0, 115, 16, 1, 0, 0, 0, 116, 117, 5, 40, 0, 0, 117, 18, 1, 0, 0,
		0, 118, 119, 5, 41, 0, 0, 119, 20, 1, 0, 0, 0, 120, 121, 5, 44, 0, 0, 121,
		22, 1, 0, 0, 0, 122, 123, 5, 115, 0, 0, 123, 124, 5, 105, 0, 0, 124, 125,
		5, 103, 0, 0, 125, 126, 5, 110, 0, 0, 126, 127, 5, 97, 0, 0, 127, 128,
		5, 108, 0, 0, 128, 24, 1, 0, 0, 0, 129, 130, 5, 115, 0, 0, 130, 131, 5,
		116, 0, 0, 131, 132, 5, 114, 0, 0, 132, 133, 5, 117, 0, 0, 133, 134, 5,
		99, 0, 0, 134, 135, 5, 116, 0, 0, 135, 26, 1, 0, 0, 0, 136, 137, 5, 101,
		0, 0, 137, 138, 5, 110, 0, 0, 138, 139, 5, 117, 0, 0, 139, 140, 5, 109,
		0, 0, 140, 28, 1, 0, 0, 0, 141, 142, 5, 61, 0, 0, 142, 30, 1, 0, 0, 0,
		143, 144, 5, 91, 0, 0, 144, 32, 1, 0, 0, 0, 145, 146, 5, 93, 0, 0, 146,
		34, 1, 0, 0, 0, 147, 148, 5, 98, 0, 0, 148, 149, 5, 111, 0, 0, 149, 150,
		5, 111, 0, 0, 150, 151, 5, 108, 0, 0, 151, 36, 1, 0, 0, 0, 152, 153, 5,
		105, 0, 0, 153, 154, 5, 110, 0, 0, 154, 155, 5, 116, 0, 0, 155, 38, 1,
		0, 0, 0, 156, 157, 5, 105, 0, 0, 157, 158, 5, 110, 0, 0, 158, 159, 5, 116,
		0, 0, 159, 160, 5, 51, 0, 0, 160, 161, 5, 50, 0, 0, 161, 40, 1, 0, 0, 0,
		162, 163, 5, 105, 0, 0, 163, 164, 5, 110, 0, 0, 164, 165, 5, 116, 0, 0,
		165, 166, 5, 54, 0, 0, 166, 167, 5, 52, 0, 0, 167, 42, 1, 0, 0, 0, 168,
		169, 5, 102, 0, 0, 169, 170, 5, 108, 0, 0, 170, 171, 5, 111, 0, 0, 171,
		172, 5, 97, 0, 0, 172, 173, 5, 116, 0, 0, 173, 44, 1, 0, 0, 0, 174, 175,
		5, 102, 0, 0, 175, 176, 5, 108, 0, 0, 176, 177, 5, 111, 0, 0, 177, 178,
		5, 97, 0, 0, 178, 179, 5, 116, 0, 0, 179, 180, 5, 51, 0, 0, 180, 181, 5,
		50, 0, 0, 181, 46, 1, 0, 0, 0, 182, 183, 5, 102, 0, 0, 183, 184, 5, 108,
		0, 0, 184, 185, 5, 111, 0, 0, 185, 186, 5, 97, 0, 0, 186, 187, 5, 116,
		0, 0, 187, 188, 5, 54, 0, 0, 188, 189, 5, 52, 0, 0, 189, 48, 1, 0, 0, 0,
		190, 191, 5, 115, 0, 0, 191, 192, 5, 116, 0, 0, 192, 193, 5, 114, 0, 0,
		193, 194, 5, 105, 0, 0, 194, 195, 5, 110, 0, 0, 195, 196, 5, 103, 0, 0,
		196, 50, 1, 0, 0, 0, 197, 199, 7, 0, 0, 0, 198, 197, 1, 0, 0, 0, 199, 200,
		1, 0, 0, 0, 200, 198, 1, 0, 0, 0, 200, 201, 1, 0, 0, 0, 201, 202, 1, 0,
		0, 0, 202, 203, 6, 25, 0, 0, 203, 52, 1, 0, 0, 0, 204, 206, 7, 1, 0, 0,
		205, 204, 1, 0, 0, 0, 205, 206, 1, 0, 0, 0, 206, 208, 1, 0, 0, 0, 207,
		209, 2, 48, 57, 0, 208, 207, 1, 0, 0, 0, 209, 210, 1, 0, 0, 0, 210, 208,
		1, 0, 0, 0, 210, 211, 1, 0, 0, 0, 211, 54, 1, 0, 0, 0, 212, 213, 5, 48,
		0, 0, 213, 214, 5, 120, 0, 0, 214, 216, 1, 0, 0, 0, 215, 217, 7, 2, 0,
		0, 216, 215, 1, 0, 0, 0, 217, 218, 1, 0, 0, 0, 218, 216, 1, 0, 0, 0, 218,
		219, 1, 0, 0, 0, 219, 56, 1, 0, 0, 0, 220, 224, 7, 3, 0, 0, 221, 223, 7,
		4, 0, 0, 222, 221, 1, 0, 0, 0, 223, 226, 1, 0, 0, 0, 224, 222, 1, 0, 0,
		0, 224, 225, 1, 0, 0, 0, 225, 229, 1, 0, 0, 0, 226, 224, 1, 0, 0, 0, 227,
		228, 5, 91, 0, 0, 228, 230, 5, 93, 0, 0, 229, 227, 1, 0, 0, 0, 229, 230,
		1, 0, 0, 0, 230, 58, 1, 0, 0, 0, 231, 235, 7, 5, 0, 0, 232, 234, 7, 6,
		0, 0, 233, 232, 1, 0, 0, 0, 234, 237, 1, 0, 0, 0, 235, 233, 1, 0, 0, 0,
		235, 236, 1, 0, 0, 0, 236, 60, 1, 0, 0, 0, 237, 235, 1, 0, 0, 0, 238, 239,
		7, 7, 0, 0, 239, 240, 5, 46, 0, 0, 240, 241, 7, 7, 0, 0, 241, 62, 1, 0,
		0, 0, 242, 243, 5, 47, 0, 0, 243, 244, 5, 47, 0, 0, 244, 248, 1, 0, 0,
		0, 245, 247, 8, 8, 0, 0, 246, 245, 1, 0, 0, 0, 247, 250, 1, 0, 0, 0, 248,
		246, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 249, 64, 1, 0, 0, 0, 250, 248, 1,
		0, 0, 0, 251, 255, 5, 64, 0, 0, 252, 254, 8, 8, 0, 0, 253, 252, 1, 0, 0,
		0, 254, 257, 1, 0, 0, 0, 255, 253, 1, 0, 0, 0, 255, 256, 1, 0, 0, 0, 256,
		66, 1, 0, 0, 0, 257, 255, 1, 0, 0, 0, 258, 262, 5, 35, 0, 0, 259, 261,
		8, 8, 0, 0, 260, 259, 1, 0, 0, 0, 261, 264, 1, 0, 0, 0, 262, 260, 1, 0,
		0, 0, 262, 263, 1, 0, 0, 0, 263, 265, 1, 0, 0, 0, 264, 262, 1, 0, 0, 0,
		265, 266, 6, 33, 0, 0, 266, 68, 1, 0, 0, 0, 11, 0, 200, 205, 210, 218,
		224, 229, 235, 248, 255, 262, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ObjectApiLexerInit initializes any static state used to implement ObjectApiLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewObjectApiLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ObjectApiLexerInit() {
	staticData := &ObjectApiLexerLexerStaticData
	staticData.once.Do(objectapilexerLexerInit)
}

// NewObjectApiLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewObjectApiLexer(input antlr.CharStream) *ObjectApiLexer {
	ObjectApiLexerInit()
	l := new(ObjectApiLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ObjectApiLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ObjectApi.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ObjectApiLexer tokens.
const (
	ObjectApiLexerT__0            = 1
	ObjectApiLexerT__1            = 2
	ObjectApiLexerT__2            = 3
	ObjectApiLexerT__3            = 4
	ObjectApiLexerT__4            = 5
	ObjectApiLexerT__5            = 6
	ObjectApiLexerT__6            = 7
	ObjectApiLexerT__7            = 8
	ObjectApiLexerT__8            = 9
	ObjectApiLexerT__9            = 10
	ObjectApiLexerT__10           = 11
	ObjectApiLexerT__11           = 12
	ObjectApiLexerT__12           = 13
	ObjectApiLexerT__13           = 14
	ObjectApiLexerT__14           = 15
	ObjectApiLexerT__15           = 16
	ObjectApiLexerT__16           = 17
	ObjectApiLexerT__17           = 18
	ObjectApiLexerT__18           = 19
	ObjectApiLexerT__19           = 20
	ObjectApiLexerT__20           = 21
	ObjectApiLexerT__21           = 22
	ObjectApiLexerT__22           = 23
	ObjectApiLexerT__23           = 24
	ObjectApiLexerT__24           = 25
	ObjectApiLexerWHITESPACE      = 26
	ObjectApiLexerINTEGER         = 27
	ObjectApiLexerHEX             = 28
	ObjectApiLexerTYPE_IDENTIFIER = 29
	ObjectApiLexerIDENTIFIER      = 30
	ObjectApiLexerVERSION         = 31
	ObjectApiLexerDOCLINE         = 32
	ObjectApiLexerTAGLINE         = 33
	ObjectApiLexerCOMMENT         = 34
)
